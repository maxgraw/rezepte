<button id="mobile_button">
    <svg
        xmlns="http://www.w3.org/2000/svg"
        width="17"
        height="17"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        id="mobile_search_icon"
        ><circle cx="11" cy="11" r="8"></circle><path d="m21 21-4.3-4.3"
        ></path></svg
    >
    <svg
        xmlns="http://www.w3.org/2000/svg"
        width="17"
        height="17"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        id="mobile_close_icon"
        data-visible="false"
        ><circle cx="12" cy="12" r="10"></circle><path d="m15 9-6 6"
        ></path><path d="m9 9 6 6"></path></svg
    >
</button>

<form id="search_form">
    <div class="search_container">
        <svg
            xmlns="http://www.w3.org/2000/svg"
            width="15"
            height="15"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="lucide lucide-search"
            ><circle cx="11" cy="11" r="8"></circle><path d="m21 21-4.3-4.3"
            ></path></svg
        >
        <input id="search" />
        <button id="reset" data-visible="false">
            <svg
                xmlns="http://www.w3.org/2000/svg"
                width="15"
                height="15"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="lucide lucide-x"
                ><path d="M18 6 6 18"></path><path d="m6 6 12 12"></path></svg
            >
        </button>
    </div>
    <ul id="result"></ul>
</form>

<script is:inline>
    let pagefind;

    const search_input = document.getElementById("search");
    const result_output = document.getElementById("result");
    const reset_button = document.getElementById("reset");
    const mobile_button = document.getElementById("mobile_button");
    const search_form = document.getElementById("search_form");
    const mobile_search_icon = document.getElementById("mobile_search_icon");
    const mobile_close_icon = document.getElementById("mobile_close_icon");

    search_input.addEventListener("focus", async (e) => {
        if (!pagefind) {
            pagefind = await import("/pagefind/pagefind.js");
            await pagefind.options({
                ranking: {
                    pageLength: 0.5,
                },
            });
            pagefind.init();
        }
    });

    search_input.addEventListener("input", async (e) => {
        const data = await pagefind.debouncedSearch(e.target.value);

        if (data === null) {
            return;
        } else {
            reset_button.dataset.visible = "true";
            result_output.innerHTML = "";
        }

        if (e.target.value == "") {
            reset_button.dataset.visible = "false";
            result_output.innerHTML = "";
            return;
        }

        for (const result of data.results) {
            const data = await result.data();

            const li = document.createElement("li");
            const link = document.createElement("a");

            const url = data.url.replace(".html", "")

            link.setAttribute("href", url);
            link.innerHTML = data.meta.title;

            li.appendChild(link);
            result_output.appendChild(li);
        }
    });

    reset_button.addEventListener("click", (e) => {
        e.preventDefault();
        search_input.value = "";
        result_output.innerHTML = "";

        reset_button.dataset.visible = "false";
    });

    mobile_button.addEventListener("click", (e) => {
        const toggle =
            search_form.dataset.visible === "true" ? "false" : "true";
        search_form.dataset.visible = toggle;

        if (toggle == "true") {
            search_input.focus();
            document.body.classList.toggle("overflow");
            mobile_search_icon.dataset.visible = "false";
            mobile_close_icon.dataset.visible = "true";
            return;
        }

        document.body.classList.toggle("overflow");
        mobile_search_icon.dataset.visible = "true";
        mobile_close_icon.dataset.visible = "false";

        search_input.value = "";
        result_output.innerHTML = "";

        reset_button.dataset.visible = "false";
    });
</script>

<style>
    #search_form {
        position: relative;
    }

    .search_container {
        border: solid 1px var(--gray-5);
        display: flex;
        align-items: center;
        justify-content: space-between;

        gap: var(--size-2);

        background-color: white;
        border-radius: var(--radius-2);

        padding-inline: var(--size-2);
        padding-block: var(--size-1);
    }

    .search_container #search {
        border: none;
        flex: 1;
        outline: none;
        font-size: var(--font-size-2);
    }

    .search_container #reset[data-visible="false"] {
        opacity: 0;
    }

    #result {
        display: none;
        position: absolute;
        background-color: white;
        border-radius: var(--radius-2);

        padding-inline: var(--size-2);
        padding-block: var(--size-1);

        border: solid 1px var(--gray-5);

        width: 100%;

        flex-direction: column;

        gap: var(--size-2);

        margin-block-start: var(--size-2);
    }

    #result:has(li) {
        display: flex;
    }

    #result :global(li:hover) {
        text-decoration: underline;
    }

    #mobile_button {
        display: none;
        padding: var(--size-1);
    }

    @media only screen and (max-width: 1200px) {
        #mobile_button {
            display: flex;
        }

        #search_form {
            display: none;
        }

        #search_form[data-visible="true"] {
            display: flex;
            flex-direction: column;
            position: absolute;
            left: 0;
            width: 100%;
            background-color: var(--gray-1);
            bottom: 0;
            transform: translateY(100%);
            height: 100vh;
            padding-inline: max((100% - 70rem) /2, 2rem);

            padding-block-start: var(--size-2);
        }

        #result {
            position: relative;
            background-color: transparent;
            border: none;
        }

        *[data-visible="true"] {
            display: flex;
        }

        *[data-visible="false"] {
            display: none;
        }
    }
</style>
