<form>
    <div class="search_container">
        <input id="search" />
        <button id="reset" data-visible="false">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg>
        </button>
    </div>
    <ul id="result" />
</form>

<script is:inline>
    let pagefind;

    const search_input = document.getElementById("search")
    const result_output = document.getElementById("result")
    const reset_button = document.getElementById("reset")

    search_input.addEventListener("focus", async (e) => {
    if (!pagefind) {
        pagefind = await import("/pagefind/pagefind.js");
        await pagefind.options({ 
            ranking: {
                pageLength: 0.5,
            },
        });
        pagefind.init();
    }
})

  search_input.addEventListener("input", async (e) => {
    if (e.target.value == "") {
        reset_button.dataset.visible = "false"
        result_output.innerHTML = "";
        return;
    }

    const results = await (await pagefind.search(e.target.value)).results;

    result_output.innerHTML = "";
    reset_button.dataset.visible = "true"
    
    for (const result of results) {
        const data = await result.data();
        console.log(data, data.meta.title, data.excerpt);

        // Create Element
        const li = document.createElement("li")
        const link = document.createElement("a")

        link.setAttribute("href", data.url)
        link.innerHTML = data.meta.title

        li.appendChild(link)
        result_output.appendChild(li)
    }
  })

  reset_button.addEventListener("click", (e) => {
    e.preventDefault()
    search_input.value = ""
    result_output.innerHTML = ""

    reset_button.dataset.visible = "false"
  })
</script>

<style>
    .search_container {
        border: solid 1px var(--gray-5);
        display: flex;
        align-items: center;
        justify-content: space-between;
        
        background-color: white;
        border-radius: var(--radius-2);

        padding-inline: var(--size-2);
        padding-block: var(--size-1);
    }
    
    .search_container #search {
        border: none;
        flex: 1;
        outline: none;
        font-size: var(--font-size-2);
    }
    

    .search_container #reset[data-visible="false"] {
        display: none;
    }

    #result {
        position: absolute;
    }
</style>