---
import { getCollection } from "astro:content";
import Search from "./search.astro";
import { get_unique_tags } from "src/utils/tags";

interface Props {
	active?: string;
}

const recipes = await getCollection("recipes");

const tags = get_unique_tags(recipes)
	.sort((a, b) => b.count - a.count)
	.slice(0, 10);

const { active } = Astro.props;
---

<header>
<div class="nav">
<a class="logo" href="/">
<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-album"><rect width="18" height="18" x="3" y="3" rx="2" ry="2"/><polyline points="11 3 11 11 14 8 17 11 17 3"/></svg>
<span>Rezepte</span>
</a>
<Search class="search" />
</div>
    <ul class="tags">
    {tags.map(item => <li data-type={`${item.lowercase === active ? "active" : ""}`}>
        <a href={`/tags/${item.lowercase}`}>{item.original}</a>
    </li>)}
    </ul>
</header>

<style>
    header {
        display: flex;
        flex-direction: column;
        gap: var(--size-3);
        background-color: white;
        margin-block-end: var(--size-4);
    }

    .nav {
        display: grid;
        place-items: start;
        align-items: center;
        grid-template-columns: var(--inline) auto var(--inline);
        background-color: var(--accent);
        padding-block: var(--size-3);
        padding-inline: var(--size-3);
        position: relative;
    }

    .logo {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: var(--size-2);
    }

    .logo svg {
        aspect-ratio: 1;
    }

    .search {
        width: 100%;
        z-index: 20;
    }

    .logo:hover {
        color: hsl(228 95.8% 72.2%);
    }

    .logo svg {
        height: 1.5rem;
        width: 1.5rem;
    }

    .tags {
        overflow: auto;
        gap: 1rem;
        display: flex;
        align-items: center;
        margin-inline: var(--inline);
        padding-block-end: var(--size-3);
    }

    .tags li {
        background-color: var(--accent);
        padding-block: var(--size-1);
        padding-inline: var(--size-3);
        border-radius: var(--radius);
        position: relative;

    }

    .tags li[data-type="active"] {
        background-color: var(--focus);
    }

    .tags li[data-type="active"]:hover {
        background-color: var(--accent);
    }

    .tags li:hover {
        background-color: var(--focus);
    }

    .tags li a::before {
        content: "";
        position: absolute;
        inset: 0;
    }

    @media only screen and (max-width: 1600px) {
        .nav {
            display: flex;
            justify-content: space-between;
            gap: var(--size-4);
            align-items: center;
            padding-inline: var(--inline);
        }
    }

    @media only screen and (max-width: 600px) {

        .logo span {
            display: inline;
        }

        .nav {
            flex-direction: column;
            align-items: start;
            gap: var(--size-2);
        }
    }
</style>
