---
interface Props {
	data: {
		title: string;
		items: { amount?: string; name: string }[];
	}[];
}

const { data } = Astro.props;

const display_switch = data.length === 1;
---

<section>
  <h2>Zutaten</h2>
  {display_switch === true ? <ul>
    {
      data[0].items.map((ingredient) => (
        <li>
          <span>{ingredient.amount}</span>
          <div class="name">
          {ingredient.name}
          {ingredient.note && <span class="note">({ingredient.note})</span>}
          </div>
        </li>
      ))
    }
  </ul> : data.map((item) => <div>
    <h3>{item.title}</h3>
    <ul>
      {
        item.items.map((ingredient) => (
          <li>
            <span>{ingredient.amount}</span>
            <div class="name">
            {ingredient.name}
            {ingredient.note && <span class="note">({ingredient.note})</span>}
            </div>
          </li>
        ))
      }
    </ul>
  </div>)}

</section>

<style>
  section {
    display: flex;
    flex-direction: column;
    gap: var(--size-3);
  }

  h2 {
    font-size: clamp(1rem, 2.5vw + 1rem, 1.75rem);
  }

  h3 {
      color: gray;
  }

  div {
      display: flex;
      flex-direction: column;
      gap: var(--size-1);
  }

  ul {
    list-style-position: inside;
  }

  li {
      gap: var(--size-2);

      display: grid;
      grid-template-columns: minmax(110px,auto) 1fr;
      row-gap: 0.5rem;
      column-gap: 1rem;
  }

  li >:first-child {
      text-align: right;
  }

  li >:last-child {
  }

  .name {
      display: block;
  }

  .note {
      color: gray;
      font-size: var(--size-3);
  }
</style>
